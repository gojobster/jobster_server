/*
 * This file is generated by jOOQ.
 */
package com.talendorse.server.model.tables;


import com.talendorse.server.model.Database;
import com.talendorse.server.model.Indexes;
import com.talendorse.server.model.Keys;
import com.talendorse.server.model.tables.records.CompaniesRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Companies extends TableImpl<CompaniesRecord> {

    private static final long serialVersionUID = 1224915641;

    /**
     * The reference instance of <code>database.companies</code>
     */
    public static final Companies COMPANIES = new Companies();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CompaniesRecord> getRecordType() {
        return CompaniesRecord.class;
    }

    /**
     * The column <code>database.companies.id_company</code>.
     */
    public final TableField<CompaniesRecord, Integer> ID_COMPANY = createField("id_company", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>database.companies.id_country</code>.
     */
    public final TableField<CompaniesRecord, Integer> ID_COUNTRY = createField("id_country", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>database.companies.cif</code>.
     */
    public final TableField<CompaniesRecord, Integer> CIF = createField("cif", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>database.companies.name</code>.
     */
    public final TableField<CompaniesRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR(80).nullable(false), this, "");

    /**
     * The column <code>database.companies.description</code>.
     */
    public final TableField<CompaniesRecord, String> DESCRIPTION = createField("description", org.jooq.impl.SQLDataType.VARCHAR(1000), this, "");

    /**
     * The column <code>database.companies.path_img</code>.
     */
    public final TableField<CompaniesRecord, String> PATH_IMG = createField("path_img", org.jooq.impl.SQLDataType.VARCHAR(240), this, "");

    /**
     * The column <code>database.companies.website</code>.
     */
    public final TableField<CompaniesRecord, String> WEBSITE = createField("website", org.jooq.impl.SQLDataType.VARCHAR(90), this, "");

    /**
     * The column <code>database.companies.phone</code>.
     */
    public final TableField<CompaniesRecord, String> PHONE = createField("phone", org.jooq.impl.SQLDataType.VARCHAR(45), this, "");

    /**
     * The column <code>database.companies.email</code>.
     */
    public final TableField<CompaniesRecord, String> EMAIL = createField("email", org.jooq.impl.SQLDataType.VARCHAR(45).nullable(false), this, "");

    /**
     * The column <code>database.companies.adress</code>.
     */
    public final TableField<CompaniesRecord, String> ADRESS = createField("adress", org.jooq.impl.SQLDataType.VARCHAR(45), this, "");

    /**
     * The column <code>database.companies.city</code>.
     */
    public final TableField<CompaniesRecord, String> CITY = createField("city", org.jooq.impl.SQLDataType.VARCHAR(45).nullable(false), this, "");

    /**
     * The column <code>database.companies.date_created</code>.
     */
    public final TableField<CompaniesRecord, Timestamp> DATE_CREATED = createField("date_created", org.jooq.impl.SQLDataType.TIMESTAMP.defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * The column <code>database.companies.date_modification</code>.
     */
    public final TableField<CompaniesRecord, Timestamp> DATE_MODIFICATION = createField("date_modification", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * Create a <code>database.companies</code> table reference
     */
    public Companies() {
        this(DSL.name("companies"), null);
    }

    /**
     * Create an aliased <code>database.companies</code> table reference
     */
    public Companies(String alias) {
        this(DSL.name(alias), COMPANIES);
    }

    /**
     * Create an aliased <code>database.companies</code> table reference
     */
    public Companies(Name alias) {
        this(alias, COMPANIES);
    }

    private Companies(Name alias, Table<CompaniesRecord> aliased) {
        this(alias, aliased, null);
    }

    private Companies(Name alias, Table<CompaniesRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> Companies(Table<O> child, ForeignKey<O, CompaniesRecord> key) {
        super(child, key, COMPANIES);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Database.DATABASE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.COMPANIES_PRIMARY, Indexes.COMPANIES_WRWEG_IDX);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<CompaniesRecord> getPrimaryKey() {
        return Keys.KEY_COMPANIES_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<CompaniesRecord>> getKeys() {
        return Arrays.<UniqueKey<CompaniesRecord>>asList(Keys.KEY_COMPANIES_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<CompaniesRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<CompaniesRecord, ?>>asList(Keys.FK_COMMPANY_COUNTRY);
    }

    public Countries countries() {
        return new Countries(this, Keys.FK_COMMPANY_COUNTRY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Companies as(String alias) {
        return new Companies(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Companies as(Name alias) {
        return new Companies(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Companies rename(String name) {
        return new Companies(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Companies rename(Name name) {
        return new Companies(name, null);
    }
}
