/*
 * This file is generated by jOOQ.
 */
package com.talendorse.server.model.tables.records;


import com.talendorse.server.model.tables.Logs;

import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class LogsRecord extends UpdatableRecordImpl<LogsRecord> implements Record4<Integer, String, String, Timestamp> {

    private static final long serialVersionUID = -547208909;

    /**
     * Setter for <code>database.logs.id_log</code>.
     */
    public void setIdLog(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>database.logs.id_log</code>.
     */
    public Integer getIdLog() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>database.logs.tag</code>.
     */
    public void setTag(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>database.logs.tag</code>.
     */
    public String getTag() {
        return (String) get(1);
    }

    /**
     * Setter for <code>database.logs.log</code>.
     */
    public void setLog(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>database.logs.log</code>.
     */
    public String getLog() {
        return (String) get(2);
    }

    /**
     * Setter for <code>database.logs.date_created</code>.
     */
    public void setDateCreated(Timestamp value) {
        set(3, value);
    }

    /**
     * Getter for <code>database.logs.date_created</code>.
     */
    public Timestamp getDateCreated() {
        return (Timestamp) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<Integer, String, String, Timestamp> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<Integer, String, String, Timestamp> valuesRow() {
        return (Row4) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return Logs.LOGS.ID_LOG;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return Logs.LOGS.TAG;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return Logs.LOGS.LOG;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field4() {
        return Logs.LOGS.DATE_CREATED;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component1() {
        return getIdLog();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component2() {
        return getTag();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component3() {
        return getLog();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp component4() {
        return getDateCreated();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getIdLog();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getTag();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getLog();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value4() {
        return getDateCreated();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LogsRecord value1(Integer value) {
        setIdLog(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LogsRecord value2(String value) {
        setTag(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LogsRecord value3(String value) {
        setLog(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LogsRecord value4(Timestamp value) {
        setDateCreated(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LogsRecord values(Integer value1, String value2, String value3, Timestamp value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached LogsRecord
     */
    public LogsRecord() {
        super(Logs.LOGS);
    }

    /**
     * Create a detached, initialised LogsRecord
     */
    public LogsRecord(Integer idLog, String tag, String log, Timestamp dateCreated) {
        super(Logs.LOGS);

        set(0, idLog);
        set(1, tag);
        set(2, log);
        set(3, dateCreated);
    }
}
