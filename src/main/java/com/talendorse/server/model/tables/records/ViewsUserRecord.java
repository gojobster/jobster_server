/*
 * This file is generated by jOOQ.
 */
package com.talendorse.server.model.tables.records;


import com.talendorse.server.model.tables.ViewsUser;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ViewsUserRecord extends UpdatableRecordImpl<ViewsUserRecord> implements Record4<Integer, Integer, Integer, Integer> {

    private static final long serialVersionUID = -1837511760;

    /**
     * Setter for <code>database.views_user.id_views_user</code>.
     */
    public void setIdViewsUser(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>database.views_user.id_views_user</code>.
     */
    public Integer getIdViewsUser() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>database.views_user.id_user</code>.
     */
    public void setIdUser(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>database.views_user.id_user</code>.
     */
    public Integer getIdUser() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>database.views_user.id_offer</code>.
     */
    public void setIdOffer(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>database.views_user.id_offer</code>.
     */
    public Integer getIdOffer() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>database.views_user.id_company</code>.
     */
    public void setIdCompany(Integer value) {
        set(3, value);
    }

    /**
     * Getter for <code>database.views_user.id_company</code>.
     */
    public Integer getIdCompany() {
        return (Integer) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<Integer, Integer, Integer, Integer> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<Integer, Integer, Integer, Integer> valuesRow() {
        return (Row4) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return ViewsUser.VIEWS_USER.ID_VIEWS_USER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field2() {
        return ViewsUser.VIEWS_USER.ID_USER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field3() {
        return ViewsUser.VIEWS_USER.ID_OFFER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field4() {
        return ViewsUser.VIEWS_USER.ID_COMPANY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component1() {
        return getIdViewsUser();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component2() {
        return getIdUser();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component3() {
        return getIdOffer();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component4() {
        return getIdCompany();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getIdViewsUser();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value2() {
        return getIdUser();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value3() {
        return getIdOffer();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value4() {
        return getIdCompany();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ViewsUserRecord value1(Integer value) {
        setIdViewsUser(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ViewsUserRecord value2(Integer value) {
        setIdUser(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ViewsUserRecord value3(Integer value) {
        setIdOffer(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ViewsUserRecord value4(Integer value) {
        setIdCompany(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ViewsUserRecord values(Integer value1, Integer value2, Integer value3, Integer value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ViewsUserRecord
     */
    public ViewsUserRecord() {
        super(ViewsUser.VIEWS_USER);
    }

    /**
     * Create a detached, initialised ViewsUserRecord
     */
    public ViewsUserRecord(Integer idViewsUser, Integer idUser, Integer idOffer, Integer idCompany) {
        super(ViewsUser.VIEWS_USER);

        set(0, idViewsUser);
        set(1, idUser);
        set(2, idOffer);
        set(3, idCompany);
    }
}
